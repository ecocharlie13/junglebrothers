window.Gantt = class {
  constructor(selector, tasks) {
    const container = document.querySelector(selector);
    container.innerHTML = "";

    const cores = ["#c084fc", "#4ade80", "#60a5fa", "#facc15", "#f472b6"];
    const grupos = {};

    tasks.forEach(t => {
      const grupo = t.id.split("-")[0];
      if (!grupos[grupo]) {
        grupos[grupo] = {
          cor: cores[Object.keys(grupos).length % cores.length],
          nome: t.titulo || grupo.replace(/_.*/, "")
        };
      }
    });

    const hoje = new Date().toISOString().split("T")[0];
    const hojeLabel = document.createElement("div");
    hojeLabel.className = "text-sm text-gray-600 mb-2 flex items-center gap-4 flex-wrap";

    Object.entries(grupos).forEach(([id, { cor, nome }]) => {
      const item = document.createElement("span");
      item.innerHTML = `<span class="inline-block w-4 h-4 rounded-sm" style="background:${cor}"></span> ${nome}`;
      hojeLabel.appendChild(item);
    });

    const marcadorHoje = document.createElement("span");
    marcadorHoje.innerHTML = `<span class='text-red-600'>üìç Hoje:</span> ${hoje}`;
    hojeLabel.appendChild(marcadorHoje);

    container.appendChild(hojeLabel);

    // Ocultar eventos passados toggle
    const toggle = document.createElement("label");
    toggle.className = "block text-sm text-gray-700 mb-2";
    toggle.innerHTML = `<input type="checkbox" id="ocultarPassados" class="mr-2"> Ocultar eventos passados`;
    container.appendChild(toggle);

    const chartArea = document.createElement("div");
    container.appendChild(chartArea);

    function desenhar() {
      chartArea.innerHTML = "";

      const ocultar = document.getElementById("ocultarPassados").checked;
      const ultimaSemana = new Date();
      ultimaSemana.setDate(ultimaSemana.getDate() - 7);

      const filtradas = ocultar
        ? tasks.filter(t => new Date(t.end) >= ultimaSemana)
        : tasks;

      if (filtradas.length === 0) {
        chartArea.innerHTML = "<p class='text-center text-gray-500'>Nenhum evento para exibir.</p>";
        return;
      }

      const datas = filtradas.flatMap(t => [new Date(t.start), new Date(t.end)]);
      const minData = new Date(Math.min(...datas));
      const maxData = new Date(Math.max(...datas));

      const diasTotais = Math.ceil((maxData - minData) / 86400000);
      const larguraGrafico = chartArea.clientWidth;
      const pxPorDia = larguraGrafico / diasTotais;

      // Cabe√ßalho com semanas
      const semanas = document.createElement("div");
      semanas.className = "flex border-b text-xs";
      for (let d = new Date(minData); d <= maxData; d.setDate(d.getDate() + 7)) {
        const semana = document.createElement("div");
        semana.className = "text-center py-1";
        semana.style.width = `${7 * pxPorDia}px`;
        semana.style.background = (semanas.childNodes.length % 2 === 0) ? "#f9fafb" : "#e5e7eb";
        semana.textContent = `Semana ${getWeek(d)}`;
        semanas.appendChild(semana);
      }
      chartArea.appendChild(semanas);

      // Barras de eventos
      filtradas.forEach(task => {
        const grupo = grupos[task.id.split("-")[0]];
        const cor = grupo.cor;

        const start = new Date(task.start);
        const end = new Date(task.end);
        const offset = (start - minData) / 86400000 * pxPorDia;
        const largura = Math.max(2, (end - start) / 86400000 * pxPorDia);

        const linha = document.createElement("div");
        linha.className = "flex items-center mb-2 relative";
        linha.style.height = "30px";

        const dataIni = document.createElement("span");
        dataIni.className = "text-xs text-gray-500 absolute left-0 -ml-12";
        dataIni.textContent = formatar(task.start);

        const dataFim = document.createElement("span");
        dataFim.className = "text-xs text-gray-500 absolute";
        dataFim.style.left = `${offset + largura + 4}px`;
        dataFim.textContent = formatar(task.end);

        const barra = document.createElement("div");
        barra.className = "text-white text-xs px-2 py-1 rounded shadow absolute";
        barra.style.left = `${offset}px`;
        barra.style.width = `${largura}px`;
        barra.style.backgroundColor = cor;
        barra.textContent = task.name;

        linha.appendChild(dataIni);
        linha.appendChild(barra);
        linha.appendChild(dataFim);
        chartArea.appendChild(linha);
      });
    }

    function formatar(iso) {
      const meses = ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"];
      const d = new Date(iso);
      return `${d.getDate().toString().padStart(2, "0")} ${meses[d.getMonth()]}`;
    }

    function getWeek(date) {
      const d = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()));
      const dayNum = d.getUTCDay() || 7;
      d.setUTCDate(d.getUTCDate() + 4 - dayNum);
      const yearStart = new Date(Date.UTC(d.getUTCFullYear(),0,1));
      return Math.ceil((((d - yearStart) / 86400000) + 1)/7);
    }

    document.getElementById("ocultarPassados").addEventListener("change", desenhar);
    window.addEventListener("resize", desenhar);
    desenhar();
  }
};
