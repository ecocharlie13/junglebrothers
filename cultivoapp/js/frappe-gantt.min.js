window.Gantt = class {
  constructor(selector, tarefas, periodo = "Tudo") {
    const container = document.querySelector(selector);
    container.innerHTML = "";

    if (!tarefas || tarefas.length === 0) return;

    const cores = ["#a78bfa", "#4ade80", "#60a5fa", "#facc15", "#f472b6"];
    const cultivos = [...new Set(tarefas.map(t => t.cultivo))];
    const corCultivo = Object.fromEntries(cultivos.map((c, i) => [c, cores[i % cores.length]]));

    const hoje = new Date();
    const inicioTodos = new Date(Math.min(...tarefas.map(t => new Date(t.start))));
    const fimTodos = new Date(Math.max(...tarefas.map(t => new Date(t.end))));

    let inicio, fim;
    switch (periodo) {
      case "Semana":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setDate(fim.getDate() + 7);
        break;
      case "Mes":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setDate(fim.getDate() + 30);
        break;
      case "Semestre":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setMonth(fim.getMonth() + 6);
        break;
      case "Ano":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setFullYear(fim.getFullYear() + 1);
        break;
      default:
        inicio = inicioTodos;
        fim = fimTodos;
    }

    const legenda = document.createElement("div");
    legenda.className = "flex flex-wrap items-center gap-6 px-4 pt-4 text-sm";
    cultivos.forEach(c => {
      const inicioC = formatarData(Math.min(...tarefas.filter(t => t.cultivo === c).map(t => new Date(t.start))));
      const fimC = formatarData(Math.max(...tarefas.filter(t => t.cultivo === c).map(t => new Date(t.end))));
      const cor = corCultivo[c];
      const item = document.createElement("div");
      item.innerHTML = `<span class="inline-block w-3 h-3 rounded-full mr-1" style="background:${cor}"></span> <span>${formatarNome(c)} (${inicioC} → ${fimC})</span>`;
      legenda.appendChild(item);
    });
    container.appendChild(legenda);

    const grade = document.createElement("div");
    grade.className = "overflow-hidden p-4 relative";
    container.appendChild(grade);

    const diasTotal = Math.ceil((fim - inicio) / 86400000);

    // Fundo de meses
    const fundoMeses = document.createElement("div");
    fundoMeses.className = "absolute inset-0 z-0 flex";
    let atual = new Date(inicio);
    atual.setDate(1);
    atual.setHours(0, 0, 0, 0);
    let corFlag = false;
    while (atual < fim) {
      const proximoMes = new Date(atual);
      proximoMes.setMonth(atual.getMonth() + 1);
      const diasInicio = Math.max(0, Math.floor((atual - inicio) / 86400000));
      const diasDuracao = Math.min(diasTotal - diasInicio, Math.floor((proximoMes - atual) / 86400000));
      const largura = (diasDuracao / diasTotal) * 100;
      const div = document.createElement("div");
      div.style.width = `${largura}%`;
      div.className = corFlag ? "bg-gray-100" : "bg-white";
      fundoMeses.appendChild(div);
      corFlag = !corFlag;
      atual = proximoMes;
    }
    grade.appendChild(fundoMeses);

    // Cabeçalho Semanas
    const cabecalho = document.createElement("div");
    cabecalho.className = "relative z-10 flex text-xs font-bold text-gray-700 mb-2";
    for (let i = 0; i <= diasTotal; i += 7) {
      const d = new Date(inicio);
      d.setDate(d.getDate() + i);
      const semana = semanaAno(d);
      const coluna = document.createElement("div");
      coluna.className = `text-center border py-1`;
      coluna.style.width = `${(7 / diasTotal) * 100}%`;
      coluna.innerHTML = `<div>S${semana}</div>`;
      cabecalho.appendChild(coluna);
    }
    grade.appendChild(cabecalho);

    // Linha por evento
    tarefas.forEach(t => {
      const inicioEvento = new Date(t.start);
      const fimEvento = new Date(t.end);
      const diasInicio = Math.max(0, Math.floor((inicioEvento - inicio) / 86400000));
      const diasDuracao = Math.max(1, Math.ceil((fimEvento - inicioEvento) / 86400000));
      const cor = corCultivo[t.cultivo];

      const linha = document.createElement("div");
      linha.className = "flex items-center text-xs mb-2 relative z-10";

      const espaco = document.createElement("div");
      espaco.style.width = `${(diasInicio / diasTotal) * 100}%`;
      linha.appendChild(espaco);

      const barra = document.createElement("div");
      barra.style.width = `${(diasDuracao / diasTotal) * 100}%`;
      barra.className = "rounded px-2 py-1 text-white truncate";
      barra.style.background = cor;
      barra.textContent = `${t.name}: ${formatarData(t.start)} → ${formatarData(t.end)}`;

      linha.appendChild(barra);
      grade.appendChild(linha);
    });

    function formatarData(iso) {
      const d = new Date(iso);
      return `${d.getDate().toString().padStart(2, '0')} ${d.toLocaleDateString('pt-BR', { month: 'short' })}`;
    }

    function formatarNome(nome) {
      return nome.split("_")[0];
    }

    function semanaAno(date) {
      const jan1 = new Date(date.getFullYear(), 0, 1);
      const diff = (date - jan1) / 86400000;
      return Math.ceil((diff + jan1.getDay() + 1) / 7);
    }
  }
};
