window.Gantt = class {
  constructor(selector, tasks) {
    const container = document.querySelector(selector);
    container.innerHTML = "";

    if (!tasks.length) return;

    const cores = ["#60a5fa", "#4ade80", "#facc15", "#f472b6", "#c084fc"];
    const cultivos = {};
    const cultivoEventos = {};

    // Agrupar tarefas por cultivo
    tasks.forEach(t => {
      const cultivoId = t.id.split("-")[0];
      if (!cultivos[cultivoId]) {
        cultivos[cultivoId] = cores[Object.keys(cultivos).length % cores.length];
        cultivoEventos[cultivoId] = [];
      }
      cultivoEventos[cultivoId].push(t);
    });

    // Ordenar eventos por início
    tasks.sort((a, b) => new Date(a.start) - new Date(b.start));

    // Determinar intervalo de tempo
    const minDate = new Date(Math.min(...tasks.map(t => new Date(t.start))));
    const maxDate = new Date(Math.max(...tasks.map(t => new Date(t.end))));
    const diasTotais = Math.ceil((maxDate - minDate) / (1000 * 60 * 60 * 24)) + 1;

    // Elementos
    const hoje = new Date().toISOString().split("T")[0];
    const hojeLabel = document.createElement("div");
    hojeLabel.className = "text-sm text-gray-600 mb-2";
    hojeLabel.textContent = `Calendário do Cultivo (Gantt) - ${this.formatar(hoje)}`;
    container.appendChild(hojeLabel);

    // Legenda
    const legenda = document.createElement("div");
    legenda.className = "flex flex-wrap gap-4 mb-4 text-sm";
    for (const cultivoId in cultivoEventos) {
      const eventos = cultivoEventos[cultivoId];
      const cor = cultivos[cultivoId];
      const inicio = this.formatar(eventos[0].start);
      const fim = this.formatar(eventos[eventos.length - 1].end);
      const tag = document.createElement("span");
      tag.innerHTML = `<span class="inline-block w-3 h-3 mr-1 rounded" style="background:${cor}"></span>${cultivoId} (${inicio}–${fim})`;
      legenda.appendChild(tag);
    }
    container.appendChild(legenda);

    // Cabeçalho das semanas
    const header = document.createElement("div");
    header.className = "flex text-xs text-gray-500 border-b border-gray-300";
    for (let i = 0; i < diasTotais; i++) {
      const data = new Date(minDate);
      data.setDate(minDate.getDate() + i);
      const semana = this.getSemanaAno(data);
      const coluna = document.createElement("div");
      coluna.style.flex = "1";
      coluna.className = i % 14 < 7 ? "bg-gray-100" : "bg-white";
      coluna.textContent = i % 7 === 0 ? `S${semana}` : "";
      coluna.style.textAlign = "center";
      coluna.style.borderRight = "1px solid #e5e7eb";
      header.appendChild(coluna);
    }
    container.appendChild(header);

    // Gráfico
    for (const cultivoId in cultivoEventos) {
      const cor = cultivos[cultivoId];
      cultivoEventos[cultivoId].forEach(t => {
        const linha = document.createElement("div");
        linha.className = "flex items-center text-xs border-b border-gray-100 h-8 relative";

        const inicio = new Date(t.start);
        const fim = new Date(t.end);
        const posInicio = Math.floor((inicio - minDate) / (1000 * 60 * 60 * 24));
        const duracao = Math.max(1, Math.ceil((fim - inicio) / (1000 * 60 * 60 * 24)));

        const evento = document.createElement("div");
        evento.className = "absolute text-white text-center px-2 py-1 rounded"
        evento.style.left = `${(posInicio / diasTotais) * 100}%`;
        evento.style.width = `${(duracao / diasTotais) * 100}%`;
        evento.style.background = cor;
        evento.style.whiteSpace = "nowrap";
        evento.style.overflow = "hidden";
        evento.style.textOverflow = "ellipsis";
        evento.title = `${t.name}`;
        evento.innerHTML = `<span>${t.name}</span><span class='ml-2 text-[10px]'>${this.formatar(t.end)}</span>`;

        linha.appendChild(evento);
        container.appendChild(linha);
      });
    }
  }

  formatar(iso) {
    const meses = ["Jan", "Fev", "Mar", "Abr", "Mai", "Jun", "Jul", "Ago", "Set", "Out", "Nov", "Dez"];
    const d = new Date(iso);
    return `${d.getDate().toString().padStart(2, "0")} ${meses[d.getMonth()]}`;
  }

  getSemanaAno(data) {
    const dia = new Date(Date.UTC(data.getFullYear(), data.getMonth(), data.getDate()));
    const diaSemana = dia.getUTCDay() || 7;
    dia.setUTCDate(dia.getUTCDate() + 4 - diaSemana);
    const anoInicio = new Date(Date.UTC(dia.getUTCFullYear(), 0, 1));
    return Math.ceil(((dia - anoInicio) / 86400000 + 1) / 7);
  }
};
