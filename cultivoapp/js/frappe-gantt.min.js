window.Gantt = class {
  constructor(selector, tarefas, periodo = "Tudo") {
    const container = document.querySelector(selector);
    container.innerHTML = "";

    if (!tarefas || tarefas.length === 0) return;

    const cores = ["#a78bfa", "#4ade80", "#60a5fa", "#facc15", "#f472b6"];
    const cultivos = [...new Set(tarefas.map(t => t.cultivo))];
    const corCultivo = Object.fromEntries(cultivos.map((c, i) => [c, cores[i % cores.length]]));

    const hoje = new Date();
    const inicioTodos = new Date(Math.min(...tarefas.map(t => new Date(t.start))));
    const fimTodos = new Date(Math.max(...tarefas.map(t => new Date(t.end))));

    let inicio, fim;
    switch (periodo) {
      case "Semana":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setDate(fim.getDate() + 7);
        break;
      case "Quinzena":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setDate(fim.getDate() + 15);
        break;
      case "Mes":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setDate(fim.getDate() + 30);
        break;
      case "Semestre":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setMonth(fim.getMonth() + 6);
        break;
      case "Ano":
        inicio = new Date(hoje);
        fim = new Date(hoje);
        fim.setFullYear(fim.getFullYear() + 1);
        break;
      default:
        inicio = inicioTodos;
        fim = fimTodos;
    }

    const legenda = document.createElement("div");
    legenda.className = "flex flex-wrap items-center gap-6 px-4 pt-4 text-sm";
    cultivos.forEach(c => {
      const inicioC = formatarData(Math.min(...tarefas.filter(t => t.cultivo === c).map(t => new Date(t.start))));
      const fimC = formatarData(Math.max(...tarefas.filter(t => t.cultivo === c).map(t => new Date(t.end))));
      const cor = corCultivo[c];
      const item = document.createElement("div");
      item.innerHTML = `<span class='inline-block w-3 h-3 rounded-full mr-1' style='background:${cor}'></span> <span>${c} (${inicioC} → ${fimC})</span>`;
      legenda.appendChild(item);
    });
    container.appendChild(legenda);

    const grade = document.createElement("div");
    grade.className = "overflow-hidden p-4 relative";
    container.appendChild(grade);

    const diasTotal = Math.ceil((fim - inicio) / 86400000);
    const diasPorSemana = 7;
    const semanas = Math.ceil(diasTotal / diasPorSemana);
    const larguraSemana = 100 / semanas;

    const mesFaixas = [];
    for (let d = new Date(inicio); d <= fim; d.setDate(d.getDate() + 1)) {
      const key = `${d.getFullYear()}-${d.getMonth()}`;
      if (!mesFaixas.find(f => f.key === key)) {
        mesFaixas.push({ key, start: new Date(d), end: new Date(d) });
      }
      mesFaixas[mesFaixas.length - 1].end = new Date(d);
    }

    mesFaixas.forEach((faixa, i) => {
      const duracao = (faixa.end - faixa.start) / 86400000 + 1;
      const faixaDiv = document.createElement("div");
      faixaDiv.className = i % 2 === 0 ? "absolute top-0 bottom-0 left-0 bg-gray-100" : "absolute top-0 bottom-0 left-0 bg-white";
      faixaDiv.style.width = `${(duracao / diasTotal) * 100}%`;
      faixaDiv.style.left = `${((faixa.start - inicio) / 86400000 / diasTotal) * 100}%`;
      grade.appendChild(faixaDiv);
    });

    const cabecalho = document.createElement("div");
    cabecalho.className = "flex text-xs font-bold text-gray-700 mb-2 relative z-10";
    for (let i = 0; i < semanas; i++) {
      const d = new Date(inicio);
      d.setDate(d.getDate() + i * 7);
      const semana = semanaAno(d);
      const coluna = document.createElement("div");
      coluna.className = "text-center border py-1 bg-white";
      coluna.style.width = `${larguraSemana}%`;
      coluna.textContent = `S${semana}`;
      cabecalho.appendChild(coluna);
    }
    grade.appendChild(cabecalho);

    tarefas.forEach(t => {
      const inicioEvento = new Date(t.start);
      const fimEvento = new Date(t.end);
      const diasInicio = Math.max(0, Math.floor((inicioEvento - inicio) / 86400000));
      const diasDuracao = Math.max(1, Math.ceil((fimEvento - inicioEvento) / 86400000));
      const cor = corCultivo[t.cultivo];

      const linha = document.createElement("div");
      linha.className = "flex items-center text-xs mb-2 relative z-10";

      const espaco = document.createElement("div");
      espaco.style.width = `${(diasInicio / diasTotal) * 100}%`;
      linha.appendChild(espaco);

      const barra = document.createElement("div");
      barra.style.width = `${(diasDuracao / diasTotal) * 100}%`;
      barra.className = "rounded h-4";
      barra.style.background = cor;
      linha.appendChild(barra);

      const texto = document.createElement("div");
      texto.className = "absolute text-xs text-gray-800 whitespace-nowrap";
      texto.textContent = `${capitalize(t.name)}: ${formatarData(t.start)} → ${formatarData(t.end)}`;

      const leftPercent = (diasInicio / diasTotal) * 100;

    if (leftPercent > 75) {
      texto.style.right = `${100 - leftPercent + 0.5}%`;
      texto.style.left = "auto";
      texto.style.textAlign = "right";
    } else {
      texto.style.left = `${leftPercent + (diasDuracao / diasTotal) * 100 + 0.5}%`;
      texto.style.right = "auto";
      texto.style.textAlign = "left";
    }

      linha.appendChild(texto);
      grade.appendChild(linha);
    });

    function formatarData(iso) {
      const d = new Date(iso);
      return `${d.getDate().toString().padStart(2, '0')} ${d.toLocaleDateString('pt-BR', { month: 'short' })}`;
    }

    function semanaAno(date) {
      const jan1 = new Date(date.getFullYear(), 0, 1);
      const diff = (date - jan1) / 86400000;
      return Math.ceil((diff + jan1.getDay() + 1) / 7);
    }

    function capitalize(txt) {
      return txt.charAt(0).toUpperCase() + txt.slice(1);
    }
  }
};
